name: Linux Package PyPI deploy

on:
  release:
    types: [created]

jobs:
  deploy:
    strategy:
      matrix:
        os: 
          - ubuntu-latest
        python-version: [3.5, 3.6, 3.7,3.8]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up submodules
        run: |
          bash ./ext_source_setup.sh
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pre-requisites
        run: |
          sudo apt-get update
          # checking for g++
          dpkg -s g++ &> /dev/null
          if [ $? -eq 0 ]; then
              echo "g++ is installed, skipping..."
          else
              echo "Installing g++"
              sudo apt-get install g++
          fi
          echo "Installing Bazel dependencies"
          sudo apt-get install pkg-config zip zlib1g-dev unzip
          echo "Donwloading Bazel 2.1.0"
          wget https://github.com/bazelbuild/bazel/releases/download/2.1.0/bazel-2.1.0-installer-linux-x86_64.sh

          chmod +x bazel-2.1.0-installer-linux-x86_64.sh
          ./bazel-2.1.0-installer-linux-x86_64.sh --user
          export PATH="$PATH:$HOME/bin"
      - name: Build pydp lib
        run: |
          bash ./build_PyDP.sh

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements_dev.txt

      - name: Build wheel
        run: |
          python setup.py bdist_wheel

      - name: Renaming wheel
        run: |
          find . -name '*linux*.whl' -type f -exec bash -c 'mv "$1" "${1/linux/manylinux1}"' -- {} \;

      - name: Publishing the wheel
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TOKEN }}
        run: |
         # twine upload --skip-existing dist/*.whl # i need it disbaled, just tot test if workflow is triggered
         
